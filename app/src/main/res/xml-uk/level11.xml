<?xml version="1.0" encoding="utf-8"?>
<questions xmlns:android="http://schemas.android.com/apk/res/android">
    <question>
        <text android:textColor="#FFFFFFFF">Що таке функціональне програмування (Functional Programming) в контексті Java?</text>
        <options>
            <option>Це стиль програмування, який використовує лише функції в програмному коді.</option>
            <option>Це підхід, який спрямований на роботу з функціями в математичному сенсі та уникання стану.</option>
            <option>Це стиль програмування, в якому всі змінні є константами.</option>
            <option>Це методологія програмування, спрямована на максимальну продуктивність розробника.</option>
        </options>
        <correctOptionIndex>1</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Що таке Stream API в Java?</text>
        <options>
            <option>Це API для роботи зі стрічками в текстовому форматі.</option>
            <option>Це API для роботи з потоками вводу та виводу.</option>
            <option>Це API для обробки даних у вигляді послідовності елементів з використанням функціонального програмування.</option>
            <option>Це API для роботи з мережевими потоками даних.</option>
        </options>
        <correctOptionIndex>2</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Яка основна перевага використання Stream API в Java?</text>
        <options>
            <option>Зменшення кількості доступу до баз даних.</option>
            <option>Збільшення швидкодії програм.</option>
            <option>Зручність в роботі з мережами.</option>
            <option>Можливість здійснювати операції фільтрації та трансформації над потоком даних.</option>
        </options>
        <correctOptionIndex>3</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як створити Stream зі списку (List) об'єктів в Java?</text>
        <options>
            <option>За допомогою методу listStream() класу Stream.</option>
            <option>За допомогою методу stream() класу List.</option>
            <option>За допомогою методу createStream() класу Arrays.</option>
            <option>Stream не можна створити зі списку об'єктів в Java.</option>
        </options>
        <correctOptionIndex>1</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Які операції можна виконати над Stream в Java?</text>
        <options>
            <option>Тільки операції читання (read).</option>
            <option>Тільки операції запису (write).</option>
            <option>Операції фільтрації, мапування, згортання (reduce), сортування та багато інших.</option>
            <option>Stream не підтримує операції.</option>
        </options>
        <correctOptionIndex>2</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Яка операція використовується для об'єднання елементів Stream в один результат в Java?</text>
        <options>
            <option>map()</option>
            <option>filter()</option>
            <option>concat()</option>
            <option>reduce()</option>
        </options>
        <correctOptionIndex>3</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Що робить операція filter() в Stream API в Java?</text>
        <options>
            <option>Вона мапує (перетворює) елементи потоку.</option>
            <option>Вона фільтрує елементи потоку на основі заданої умови.</option>
            <option>Вона згортає (reduce) всі елементи до одного результату.</option>
            <option>Вона сортує елементи потоку.</option>
        </options>
        <correctOptionIndex>1</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Що таке лямбда-вирази в Java?</text>
        <options>
            <option>Це набір символів, які несуть окремий сенс і використовуються в рядках.</option>
            <option>Це вирази, які використовуються для визначення анонімних функцій (функцій без імені).</option>
            <option>Це вирази, які використовуються для виведення на екран.</option>
            <option>Лямбда-вирази не підтримуються в Java.</option>
        </options>
        <correctOptionIndex>1</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як можна відсортувати елементи Stream в Java за зростанням (asc) за допомогою методу sorted()?</text>
        <options>
            <option>sorted()</option>
            <option>sorted(Comparator.reverseOrder())</option>
            <option>sorted(Comparator.naturalOrder())</option>
            <option>sorted(Comparator.ascendingOrder())</option>
        </options>
        <correctOptionIndex>2</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як можна використовувати метод forEach() в Stream API в Java?</text>
        <options>
            <option>Для виконання операцій злиття (merge) елементів Stream.</option>
            <option>Для виведення кожного елементу Stream на екран.</option>
            <option>Для перетворення елементів Stream в інший тип даних.</option>
            <option>forEach() в Stream API не існує.</option>
        </options>
        <correctOptionIndex>1</correctOptionIndex>
    </question>
</questions>
