<?xml version="1.0" encoding="utf-8"?>
<questions xmlns:android="http://schemas.android.com/apk/res/android">
    <question>
        <text android:textColor="#FFFFFFFF">Що таке дженерики (generics) в мові програмування Java?</text>
        <options>
            <option>Вбудований пакет з графічними інтерфейсами.</option>
            <option>Механізм для створення універсальних (параметризованих) класів та методів.</option>
            <option>Мова програмування для роботи з великими об'ємами даних.</option>
            <option>Спеціальний тип змінних для зберігання інформації про дату та час.</option>
        </options>
        <correctOptionIndex>1</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як позначаються дженерики при оголошенні класу в Java?</text>
        <options>
            <option>За допомогою зірочки (*).</option>
            <option>За допомогою символу відсотка (%).</option>
            <option>За допомогою кутових дужок ( >).</option>
            <option>За допомогою зірочки та кутових дужок (* >).</option>
        </options>
        <correctOptionIndex>2</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Для чого використовуються параметризовані типи (generic types) в Java?</text>
        <options>
            <option>Для зберігання текстових рядків.</option>
            <option>Для зберігання числових значень.</option>
            <option>Для створення класів та методів, які можна використовувати з різними типами даних.</option>
            <option>Для створення змінних, які можна змінювати в процесі виконання програми.</option>
        </options>
        <correctOptionIndex>2</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як можна визначити параметризований метод в Java?</text>
        <options>
            <option>Додати ключове слово "generic" перед визначенням методу.</option>
            <option>Використовувати зірочку (*) перед ім'ям методу.</option>
            <option>Використовувати параметр типу перед типом повернення методу.</option>
            <option>Визначати метод так само, як і звичайний, без додаткових маркерів.</option>
        </options>
        <correctOptionIndex>2</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як можна створити список (List) з використанням дженериків в Java?</text>
        <options>
            <option>List myList = new List();</option>
            <option>ListString> myList = new ListString>();</option>
            <option>ListString> myList = new ArrayListString>();</option>
            <option>List myList = new ArrayList();</option>
        </options>
        <correctOptionIndex>2</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як можна додати елемент до колекції (Collection) в Java?</text>
        <options>
            <option>Використовуючи метод add() колекції.</option>
            <option>Використовуючи ключове слово "insert".</option>
            <option>Змінюючи розмір колекції напряму.</option>
            <option>Використовуючи метод append() колекції.</option>
        </options>
        <correctOptionIndex>0</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як можна видалити елемент з колекції (Collection) в Java?</text>
        <options>
            <option>Використовуючи метод remove() колекції.</option>
            <option>Використовуючи ключове слово "delete".</option>
            <option>Змінюючи розмір колекції напряму.</option>
            <option>Використовуючи метод clear() колекції.</option>
        </options>
        <correctOptionIndex>0</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як можна перевірити наявність елементу у колекції (Collection) в Java?</text>
        <options>
            <option>Використовуючи метод check() колекції.</option>
            <option>Використовуючи ключове слово "contains".</option>
            <option>Перевірити розмір колекції і порівняти з нулем.</option>
            <option>Використовуючи метод find() колекції.</option>
        </options>
        <correctOptionIndex>1</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як можна ітерувати (проходити) по елементах колекції (Collection) в Java?</text>
        <options>
            <option>Використовуючи ключове слово "loop".</option>
            <option>Використовуючи конструкцію "for each".</option>
            <option>Використовуючи конструкцію "if else".</option>
            <option>Завжди потрібно використовувати цикл "while".</option>
        </options>
        <correctOptionIndex>1</correctOptionIndex>
    </question>

    <question>
        <text android:textColor="#FFFFFFFF">Як можна визначити розмір колекції (Collection) в Java?</text>
        <options>
            <option>Використовуючи метод size() колекції.</option>
            <option>Використовуючи метод length() колекції.</option>
            <option>Використовуючи метод count() колекції.</option>
            <option>Розмір колекції завжди дорівнює нулю.</option>
        </options>
        <correctOptionIndex>0</correctOptionIndex>
    </question>
</questions>
